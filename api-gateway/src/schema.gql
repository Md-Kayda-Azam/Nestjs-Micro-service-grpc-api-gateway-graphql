# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Device {
  deviceId: String!
  ipAddress: String!
  userAgent: String!
  location: String
}

type User {
  _id: ID!
  firstName: String!
  lastName: String!
  email: String!
  role: String!
  school: String!
  isActive: Boolean!
  lastActive: String
  mfaEnabled: Boolean!
  mfaSecret: String
  devices: [Device!]
  notifications: [String!]
  lastPasswordChanged: String
  resetPasswordToken: String
  resetPasswordExpires: String
  resetRequestedAt: String
  resetRequestCount: Float
  resetBlockedUntil: String
  isVerified: Boolean!
  verificationToken: String
  verificationTokenExpires: String
  verificationRequestedAt: String
  verificationRequestCount: Float
  verificationBlockedUntil: String
  isDeleted: Boolean!
  refreshToken: String
  accessToken: String
  createdAt: String
  updatedAt: String
}

type ResponseMessage {
  message: String!
  code: String
}

type LogoutResponse {
  success: Boolean!
  message: String!
}

type Permission {
  _id: String!
  name: String!
  description: String!
  isActive: Boolean!
  createdAt: String
  updatedAt: String
}

type GetAllPermissionsOutput {
  permissions: [Permission!]!
  total: Int!
}

type DeletePermissionOutput {
  success: Boolean!
  message: String!
}

type CreateManyPermissionsOutput {
  permissions: [Permission!]!
}

type DeleteManyPermissionsOutput {
  success: Boolean!
  message: String!
}

type GetManyPermissionsResponse {
  permissions: [Permission!]!
  total: Int!
}

type Role {
  _id: String!
  name: String!
  permissions: [Permission!]!
  description: String!
  isActive: Boolean!
  createdAt: String
  updatedAt: String
}

type GetAllRolesOutput {
  roles: [Role!]!
  total: Int!
}

type DeleteRoleOutput {
  success: Boolean!
  message: String!
}

type CreateManyRolesOutput {
  roles: [Role!]!
}

type DeleteManyRolesOutput {
  success: Boolean!
  message: String!
}

type Query {
  users: [User!]!
  user(email: String!): User!
  me: User!
  getAllRoles(getAllRolesInput: GetAllRolesInput!): GetAllRolesOutput!
  getRole(id: String!): Role!
  getAllPermissions(getAllPermissionsInput: GetAllPermissionsInput!): GetAllPermissionsOutput!
  getPermission(id: String!): Permission!
  getManyPermissions(ids: [String!]!): GetManyPermissionsResponse!
}

input GetAllRolesInput {
  limit: Int!
  offset: Int!
}

input GetAllPermissionsInput {
  limit: Int!
  offset: Int!
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  updateUser(input: UpdateUserInput!): User!
  deleteUser(id: String!): Boolean!
  verifyAccount(input: verifyAccountInput!): User!
  resendVerification(input: resendVerificationInput!): ResponseMessage!
  login(input: loginInput!): User!
  logout: LogoutResponse!
  createRole(createRoleInput: CreateRoleInput!): Role!
  updateRole(updateRoleInput: UpdateRoleInput!): Role!
  deleteRole(id: String!): DeleteRoleOutput!
  createManyRoles(createManyRolesInput: CreateManyRolesInput!): CreateManyRolesOutput!
  deleteManyRoles(deleteManyRolesInput: DeleteManyRolesInput!): DeleteManyRolesOutput!
  createPermission(createPermissionInput: CreatePermissionInput!): Permission!
  updatePermission(updatePermissionInput: UpdatePermissionInput!): Permission!
  deletePermission(id: String!): DeletePermissionOutput!
  createManyPermissions(createManyPermissionsInput: CreateManyPermissionsInput!): CreateManyPermissionsOutput!
  deleteManyPermissions(deleteManyPermissionsInput: DeleteManyPermissionsInput!): DeleteManyPermissionsOutput!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
  role: String!
  school: String!
}

input UpdateUserInput {
  id: ID!
  firstName: String
  lastName: String
  email: String
  password: String
  role: String
  school: String
  isActive: Boolean
  mfaEnabled: Boolean
  isVerified: Boolean
  refreshToken: String
}

input verifyAccountInput {
  token: String!
  password: String!
}

input resendVerificationInput {
  email: String!
}

input loginInput {
  email: String!
  password: String!
}

input CreateRoleInput {
  name: String!
  permissionIds: [String!]!
  description: String!
}

input UpdateRoleInput {
  id: String!
  name: String!
  permissionIds: [String!]!
  description: String!
  isActive: Boolean!
}

input CreateManyRolesInput {
  roles: [CreateRoleInput!]!
}

input DeleteManyRolesInput {
  ids: [String!]!
}

input CreatePermissionInput {
  name: String!
  description: String!
}

input UpdatePermissionInput {
  id: String!
  name: String!
  description: String!
  isActive: Boolean!
}

input CreateManyPermissionsInput {
  permissions: [CreatePermissionInput!]!
}

input DeleteManyPermissionsInput {
  ids: [String!]!
}